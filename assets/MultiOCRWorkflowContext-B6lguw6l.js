import{a as s,p as G}from"./chunk-B7RQU5TL-mf8dp6A9.js";const m={questionCompilerAgentId:"",responseAgentIds:[],maxImages:3,enableTTS:!1,directAgentsIds:[],selectedPromptId:""},O=s.createContext(void 0);function H({children:a}){const[d,i]=s.useState(m),[W,x]=s.useState(!0),[f,c]=s.useState([]),[v,l]=s.useState([]),[A,p]=s.useState(!1),[M,C]=s.useState(""),[T,R]=s.useState(null),[h,w]=s.useState({}),[E,S]=s.useState({});s.useEffect(()=>{try{const e=localStorage.getItem("multi-ocr-workflow-config");if(e){const t=JSON.parse(e);i(o=>({...m,...t}))}}catch(e){console.error("Error loading Multi-OCR Workflow config from localStorage:",e)}finally{x(!1)}},[]);const P=e=>{i(t=>({...t,...e}))},y=e=>{i(e);try{localStorage.setItem("multi-ocr-workflow-config",JSON.stringify(e))}catch(t){console.error("Error saving Multi-OCR Workflow config to localStorage:",t)}},D=()=>{i(m);try{localStorage.removeItem("multi-ocr-workflow-config")}catch(e){console.error("Error removing Multi-OCR Workflow config from localStorage:",e)}},L=e=>{const t=d.maxImages||3,o=f.length,n=Math.max(0,t-o),U=e.slice(0,n).map(r=>({id:Date.now().toString()+Math.random().toString(36).substr(2,9),file:r,name:r.name,size:r.size,status:"pending"}));c(r=>[...r,...U])},b=e=>{c(t=>t.filter(o=>o.id!==e))},g=()=>{c([])},_=(e,t,o)=>{c(n=>n.map(u=>u.id===e?{...u,status:t,...o&&{ocrResult:o}}:u))},q=()=>{l([{id:"ocr-processing",name:"Procesamiento OCR de imágenes",status:"pending"},{id:"ocr-compilation",name:"Compilación de resultados OCR",status:"pending"},{id:"question-compiler",name:"Procesamiento con agente compilador",status:"pending"},{id:"response-agents",name:"Procesamiento con agentes de respuesta",status:"pending"}])},z=(e,t)=>{l(o=>o.map(n=>n.id===e?{...n,...t}:n))},F=(e,t)=>{w(o=>({...o,[e]:t}))},N=(e,t)=>{S(o=>({...o,[e]:t}))},I=()=>{C(""),R(null),w({}),S({})},j=()=>{p(!1),l(e=>e.map(t=>t.status==="processing"?{...t,status:"error",error:"Cancelado por el usuario"}:t))},k=()=>{g()},J={config:d,updateConfig:P,saveConfig:y,resetToDefaults:D,isLoading:W,images:f,addImages:L,removeImage:b,clearImages:g,updateImageStatus:_,workflowSteps:v,updateWorkflowStep:z,initializeWorkflowSteps:q,resetWorkflow:()=>{k()},compiledOCRText:M,setCompiledOCRText:C,questionCompilerResult:T,setQuestionCompilerResult:R,responseAgentsResults:h,setResponseAgentResult:F,directAgentsResults:E,setDirectAgentResult:N,clearResults:I,isRunning:A,setIsRunning:p,cancelWorkflow:j,resetImages:k,resetAll:()=>{l([]),g(),I()}};return G.jsx(O.Provider,{value:J,children:a})}function V(){const a=s.useContext(O);if(a===void 0)throw new Error("useMultiOCRWorkflow must be used within a MultiOCRWorkflowProvider");return a}export{H as M,V as u};
